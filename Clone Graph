Given a reference of a node in a connected undirected graph.

Return a deep copy (clone) of the graph.

Each node in the graph contains a val (int) and a list (List[Node]) of its neighbors.

class Solution {
    public Node cloneGraph(Node node) {
        if(node == null)
            return null;
        
        Map<Integer,Node>  map = new HashMap<>(); //map an integer to a class node
        return dfs(node, map);
    }
    public Node dfs(Node node, Map<Integer,Node> map){
        if(map.containsKey(node.val)){
            return map.get(node.val);
        }
        Node copy = new Node(node.val);
        map.put(node.val, copy);
        for(Node neighbor : node.neighbors)
            copy.neighbors.add(dfs(neighbor,map));
        
        return copy;
    }
}
