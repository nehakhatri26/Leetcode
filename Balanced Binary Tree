Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.


class Solution {
    public boolean isBalanced(TreeNode root) {
        if (maxDepth(root) > -1) return true;
        return false;
    }
    private int maxDepth(TreeNode root){
        if(root==null){
            return 0;
        }
        
        int left = maxDepth(root.left);              
        int right = maxDepth(root.right);
         
        if(left == -1 || right == -1) return -1;
        if(Math.abs(left-right) > 1) return -1;
        if(left > right) return left + 1;
        return right + 1;
    }
}
